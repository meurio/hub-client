workspace:
  base: /code

pipeline:
  unit-tests:
    image: node:9-alpine
    commands:
      - npm install
      - ./node_modules/.bin/lerna bootstrap
      - ./node_modules/.bin/lerna run test --parallel
    when:
      event: [push, tag]

  staging-build:
    image: node:9-alpine
    group: building
    environment:
      - NODE_ENV=production
      - API_URL=https://api-v1.staging.bonde.org
      - BOT_URL=https://beta.staging.bonde.org
      - REACT_APP_GRAPHQL_URL=https://api-v2.staging.bonde.org/graphql
      - GRAPHQL_URL=https://api-v2.staging.bonde.org/graphql
      - APP_DOMAIN=staging.bonde.org
      - AWS_BUCKET=bonde-assets-staging
    commands:
      - export PAGARME_KEY=$STAG_PAGARME_KEY
      - export SENTRY_DSN_PUBLIC=$STAG_SENTRY_DSN_PUBLIC
      - export GOOGLE_FONTS_API_KEY=$STAG_GOOGLE_FONTS_API_KEY
      - ./node_modules/.bin/lerna run build --parallel
    secrets: [ stag_pagarme_key, stag_sentry_dsn_public, stag_google_fonts_api_key ]
    when:
      status: success
      branch: [hotfix/*, release/*, feature/*, support/*, develop]

  staging-build-admin:
    image: node:9-alpine
    group: building
    environment:
      - NODE_ENV=production
      - API_URL=https://api-v1.staging.bonde.org
      - BOT_URL=https://beta.staging.bonde.org
      - GRAPHQL_URL=https://api-v2.staging.bonde.org/graphql
      - APP_DOMAIN=staging.bonde.org
      - AWS_BUCKET=bonde-assets-staging
    commands:
      - export PAGARME_KEY=$STAG_PAGARME_KEY
      - export SENTRY_DSN_PUBLIC=$STAG_SENTRY_DSN_PUBLIC
      - export GOOGLE_FONTS_API_KEY=$STAG_GOOGLE_FONTS_API_KEY
      - ./node_modules/.bin/lerna run testx --parallel
      - ./node_modules/.bin/lerna run buildx --parallel
    secrets: [ stag_pagarme_key, stag_sentry_dsn_public, stag_google_fonts_api_key ]
    when:
      status: success
      branch: [hotfix/*, develop]

  staging-publish-public:
    image: plugins/docker
    repo: nossas/bonde-public
    group: publishing
    secrets: [ docker_username, docker_password ]
    dockerfile: packages/bonde-public/Dockerfile
    context: packages/bonde-public/
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [hotfix/*, release/*, feature/*, support/*, develop]

  staging-publish-styleguide:
    image: plugins/docker
    repo: nossas/bonde-styleguide
    group: publishing
    secrets: [ docker_username, docker_password ]
    dockerfile: packages/bonde-styleguide/Dockerfile
    context: packages/bonde-styleguide/
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [hotfix/*, release/*, feature/*, support/*, develop]

  staging-publish-admin-canary:
    image: plugins/docker
    repo: nossas/bonde-admin-canary
    group: publishing
    secrets: [ docker_username, docker_password ]
    dockerfile: packages/bonde-admin-canary/Dockerfile
    context: packages/bonde-admin-canary/
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [release/*, feature/*, develop]

  staging-publish-admin:
    image: plugins/docker
    repo: nossas/bonde-admin
    group: publishing
    secrets: [ docker_username, docker_password ]
    dockerfile: packages/bonde-admin/Dockerfile
    context: packages/bonde-admin/
    tags:
      - ${DRONE_BRANCH/\//-}
    when:
      status: success
      branch: [hotfix/*, develop]

  staging-deploy-public:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: webservers/public
    docker_image: nossas/bonde-public:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix/*, release/*, feature/*, support/*, develop]

  staging-deploy-styleguide:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: webservers/styleguide
    docker_image: nossas/bonde-styleguide:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [release/*, feature/*, develop]

  staging-deploy-admin-canary:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: webservers/admin-canary
    docker_image: nossas/bonde-admin-canary:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [release/*, feature/*, develop]

  staging-deploy-admin:
    image: peloton/drone-rancher
    group: deploying
    url: http://cluster.bonde.org
    service: webservers/admin
    docker_image: nossas/bonde-admin:${DRONE_BRANCH/\//-}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix/*,  develop]

  production-build:
    image: node:9-alpine
    environment:
      - NODE_ENV=production
      - API_URL=https://api-v1.bonde.org
      - BOT_URL=https://beta.bonde.org
      - GRAPHQL_URL=https://api-v2.bonde.org/graphql
      - APP_DOMAIN=bonde.org
      - AWS_BUCKET=bonde-assets
    commands:
      - export PAGARME_KEY=$PROD_PAGARME_KEY
      - export SENTRY_DSN_PUBLIC=$PROD_SENTRY_DSN_PUBLIC
      - export GOOGLE_FONTS_API_KEY=$PROD_GOOGLE_FONTS_API_KEY
      - ./node_modules/.bin/lerna run build --parallel
      - ./node_modules/.bin/lerna run buildx --parallel
    secrets: [ prod_pagarme_key, prod_sentry_dsn_public, prod_google_fonts_api_key ]
    when:
      status: success
      event: tag

  production-publish-public:
    image: plugins/docker
    repo: nossas/bonde-public
    group: publishing
    secrets: [ docker_username, docker_password ]
    dockerfile: packages/bonde-public/Dockerfile
    context: packages/bonde-public/
    tags:
      - ${DRONE_TAG##v}
    when:
      status: success
      event: tag

  production-publish-admin:
    image: plugins/docker
    repo: nossas/bonde-admin
    group: publishing
    secrets: [ docker_username, docker_password ]
    dockerfile: packages/bonde-admin/Dockerfile
    context: packages/bonde-admin/
    tags:
      - ${DRONE_TAG##v}
    when:
      status: success
      event: tag

  production-deploy-public:
    image: peloton/drone-rancher
    group: deploying_prod
    url: http://cluster.bonde.org
    service: webservers/public
    docker_image: "nossas/bonde-public:${DRONE_TAG##v}"
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      event: tag

  production-deploy-admin:
    image: peloton/drone-rancher
    group: deploying_prod
    url: http://cluster.bonde.org
    service: webservers/admin
    docker_image: "nossas/bonde-admin:${DRONE_TAG##v}"
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      event: tag

  notify:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: bonde_bots
    username: CI - ${DRONE_REPO_NAME}
    when:
      event: [ push, tag, build, publish, deployment, pull_request ]
      status: [ success, failure ]
