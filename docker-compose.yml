version: '3.1'

volumes:
  # We'll define a volume that will store the data from the postgres databases:
  postgres-data:
    driver: local
  # The rabbitmq data store volume
  redis-data:
    driver: local
  # We'll also define a volume that will store gems installed manually after the initial app
  # development image build process:
  app-gems:
    driver: local
  node-modules:
    driver: local

services:
  postgres:
    image: postgres:9.6.5
    ports:
      # We'll bind our host's port 5432 to postgres's port 5432, so we can use
      # our database IDEs with it:
      - 5432:5432
    volumes:
      - ./tools/db-dumps/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 3x4mpl3

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      # We'll mount the 'redis-data' volume into the location redis stores it's data:
      - redis-data:/var/lib/redis
    command: redis-server --appendonly yes

  # This container will run the rails web server:
  api-v1:
    image: nossas/bonde-server:develop
    command: bundle exec puma -C config/puma.rb
    # build:
    #   context: ./../bonde-server/
    #   dockerfile: Dockerfile
    volumes:
      - app-gems:/usr/local/bundle

    # Enable sending signals (CTRL+C, CTRL+P + CTRL+Q) into the container:
    tty: true

    links:
      - postgres:db.devel
      - redis:keyval.devel
    environment:
      PORT: 3000
      DATABASE_URL: postgres://postgres:3x4mpl3@db.devel:5432/bonde
      QUEUE: "*"
      REDIS_URL: redis://keyval.devel:6379
      RACK_ENV: development
      RAILS_ENV: development
      JWT_SECRET: d41d8cd98f00b204e9800998ecf8427e
      WEB_CONCURRENCY: 1
      WEB_MEMORY: 256
    ports:
      - "3000:3000" # Bind our host's port 3000 to the app port 3000:

  api-v2:
    image: nossas/bonde-graphql:develop
    # build:
    #   context: ./../bonde-graphql/
    #   dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "3001:3001"
    command: npm run dev
    links:
      - postgres:db.devel
    environment:
      PORT: 3001
      SCHEMA_NAME: postgraphql
      DATABASE_URL: postgres://postgres:3x4mpl3@db.devel:5432/bonde
      JWT_TYPE: postgraphql.jwt_token
      JWT_SECRET: d41d8cd98f00b204e9800998ecf8427e
      PG_DEFAULT_ROLE: anonymous
      WEB_CONCURRENCY: 1
      WEB_MEMORY: 256

  # bot:
  #   image: nossas/bonde-bot:develop
  #   # build:
  #   #   context: ./../bonde-bot/
  #   #   dockerfile: Dockerfile

  #   depends_on:
  #     - postgres
  #   ports:
  #     - "3002:3002"
  #   command: npm run dev
  #   links:
  #     - api-v2:data.bonde.devel
  #   environment:
  #     PORT: 3002
  #     GRAPHQL_URL: http://data.bonde.devel:3001/graphql
  #     MESSENGER_APP_SECRET: 96dc8d
  #     MESSENGER_PAGE_ACCESS_TOKEN: EAAajJa
  #     MESSENGER_VALIDATION_TOKEN: bonde-client
  #     SERVER_AUTH_EMAIL: foo@bar.com
  #     SERVER_AUTH_PASSWORD: 123
  #     WEB_CONCURRENCY: 1
  #     WEB_MEMORY: 256

  # phone:
  #   image: nossas/bonde-phone:develop
  #   # build:
  #   #   context: ./../bonde-phone/
  #   #   dockerfile: Dockerfile

  #   depends_on:
  #     - postgres
  #   ports:
  #     - "3003:3003"
  #   command: npm run dev
  #   links:
  #     - postgres:db.devel
  #   environment:
  #     PORT: 3003
  #     APP_DOMAIN: 'https://_______.ngrok.io'
  #     TWILIO_ACCOUNT_SID: '____________'
  #     TWILIO_AUTH_TOKEN: '____________'
  #     TWILIO_NUMBER: '+____________'
  #     DATABASE_URL: postgres://postgraphql:3x4mpl3@db.devel:5432/bonde
  #     WEB_CONCURRENCY: 1
  #     WEB_MEMORY: 256

  # client:
  #   image: nossas/bonde-client
  #   command: yarn start
  #   depends_on:
  #     - api-v1
  #     - api-v2
  #   volumes:
  #     - ./:/code:Z
  #   ports:
  #     - "3004:5001"
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   links:
  #     - api-v1:api.bonde.devel
  #     - api-v2:data.bonde.devel
  #     - redis:keyval.devel
  #   extra_hosts:
  #     - "app.bonde.devel:127.0.0.1"
  #   environment:
  #     PORT: 5001
  #     API_URL: http://api.bonde.devel:3000
  #     APP_DOMAIN: bonde.devel:3004
  #     AWS_BUCKET: bonde-assets-development
  #     GRAPHQL_URL: http://data.bonde.devel:3001/graphql
  #     NEW_RELIC_HOME: ./src
  #     NODE_ENV: development
  #     REDIS_URL: redis://keyval.devel:6379
  #     VALIDATE_REGION: sa-east-1
  #     WEB_CONCURRENCY: 1
  #     WEB_MEMORY: 256
  #   env_file:
  #     - .env

  # cache:
  #   image: nossas/bonde-cache:develop
  #   command: go run bonde-cache
  #   depends_on:
  #     - api-v1
  #   volumes:
  #     - ../bonde-cache:/go/src/app:Z
  #   ports:
  #     - "3005:3005"
  #     - "3006:3006"
  #   # build:
  #   #   context: .
  #   #   dockerfile: Dockerfile
  #   links:
  #     - api-v1:api.bonde.devel
  #   environment:
  #     CACHE_APIURL: http://api.bonde.devel:3000
  #     PORT: 3005
  #     CACHE_ENV: development
  #     CACHE_INTERVAL: 6000
  #     CACHE_PORT: 3005
  #     CACHE_PORTSSL: 3006
  #     CACHE_RESET: 'false'
  #     AWS_SECRET_ACCESS_KEY:
  #     AWS_ACCESS_KEY_ID:

  # redirect:
  #   image: nossas/bonde-redirect:develop
  #   command: go run rebu-redirect
  #   depends_on:
  #     - api-v1
  #   volumes:
  #     - ../bonde-redirect:/go/src/app:Z
  #   ports:
  #     - "3007:3007"
  #   # build:
  #   #   context: .
  #   #   dockerfile: Dockerfile
  #   links:
  #     - api-v1:api.bonde.devel
  #   environment:
  #     PORT: 3007
