name: Build, tests and deploy to bonde-webpage
on:
  push:
    paths:
      - 'clients/webpage/**'
jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install dependencies
        run: cd clients/webpage && npm install
      
      - name: Run tests
        run: cd clients/webpage && npm run test:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./clients/webpage/coverage/clover.xml
          flags: unittests
          verbose: true

  build:
    needs: tests
    runs-on: ubuntu-20.04
    environment: staging
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: nossas/bonde-public-ts

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        env:
          REACT_APP_DOMAIN_PUBLIC: ${{ secrets.REACT_APP_DOMAIN_PUBLIC }}
          REACT_APP_API_GRAPHQL_SECRET: ${{ secrets.REACT_APP_API_GRAPHQL_SECRET }}
          REACT_APP_DOMAIN_API_ACTIVISTS: ${{ secrets.REACT_APP_DOMAIN_API_ACTIVISTS }}
          REACT_APP_DOMAIN_API_GRAPHQL: ${{ secrets.REACT_APP_DOMAIN_API_GRAPHQL }}
          REACT_APP_DOMAIN_API_REST: ${{ secrets.REACT_APP_DOMAIN_API_REST }}
          REACT_APP_PAGARME_KEY: ${{ secrets.REACT_APP_PAGARME_KEY }}
          ACTION_SECRET_KEY: ${{ secrets.ACTION_SECRET_KEY }}
        with:
          context: ./clients/webpage
          file: ./clients/webpage/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Rancher Deploy webservers/public-ts
        uses: ./.github/actions/rancher-deploy
        env:
          RANCHER_ACCESS_KEY: ${{ secrets.RANCHER_ACCESS_KEY }}
          RANCHER_SECRET_KEY: ${{ secrets.RANCHER_SECRET_KEY }}
          RANCHER_URL_API: ${{ secrets.RANCHER_URL_API }}
          RANCHER_ENVIRONMENT: ${{ secrets.RANCHER_ENVIRONMENT }}
          SERVICE_NAME: 'webservers/public-ts'
          DOCKER_IMAGE: ${{ needs.build.outputs.tags }}
