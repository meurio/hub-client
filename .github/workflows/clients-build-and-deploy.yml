name: Clients build and deploy
on:
  push:
    branches:
      - 'feature/**'
      - 'hotfix/**'
    paths:
      - 'clients/**'
jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache .pnpm-store
        uses: actions/cache@v1
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      
      - name: Install pnpm
        run: curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@6

      - name: Install dependencies
        run: cd clients && pnpm m i
      
      - name: Run tests
        run: cd clients && pnpm test
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          directory: ./clients/coverage
          flags: unittests
          verbose: true

  build:
    runs-on: ubuntu-20.04
    environment: webpage-in-staging
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: nossas/bonde-clients

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./clients
          file: ./clients/Dockerfile
          build-args: |
            SKIP_PREFLIGHT_CHECK=true
            REACT_APP_ENVIRONMENT=staging
            REACT_APP_DOMAIN_ACCOUNTS=https://accounts.staging.bonde.org
            REACT_APP_DOMAIN_ADMIN=https://app.staging.bonde.org
            REACT_APP_DOMAIN_ADMIN_CANARY=https://admin-canary.staging.bonde.org
            REACT_APP_HASURA_API_URL=${{ secrets.REACT_APP_DOMAIN_API_GRAPHQL }}
            REACT_APP_DOMAIN_BOT=https://chatbot.staging.bonde.org
            REACT_APP_DOMAIN_BETA=https://beta.staging.bonde.org
            REACT_APP_AWS_BUCKET=bonde-assets-staging
            REACT_APP_LOGIN_URL=https://accounts.staging.bonde.org/login
            REACT_APP_DOMAIN_REDES=https://redes.staging.bonde.org
            REACT_APP_UPLOADS_URL=https://api-rest.staging.bonde.org/uploads
            "REACT_APP_ZENDESK_ORGANIZATIONS={""lawyer"":360269610652,""individual"":360273031591,""therapist"":360282119532}"
            "REACT_APP_DOMAIN_PUBLIC=${{ secrets.REACT_APP_DOMAIN_PUBLIC }}"
            "REACT_APP_API_GRAPHQL_SECRET=${{ secrets.REACT_APP_API_GRAPHQL_SECRET }}"
            "REACT_APP_DOMAIN_API_ACTIVISTS=${{ secrets.REACT_APP_DOMAIN_API_ACTIVISTS }}"
            "REACT_APP_DOMAIN_API_GRAPHQL=${{ secrets.REACT_APP_DOMAIN_API_GRAPHQL }}"
            "REACT_APP_DOMAIN_API_REST=${{ secrets.REACT_APP_DOMAIN_API_REST }}"
            "REACT_APP_PAGARME_KEY=${{ secrets.REACT_APP_PAGARME_KEY }}"
            "ACTION_SECRET_KEY=${{ secrets.ACTION_SECRET_KEY }}"
            "REACT_APP_AWS_ROUTE_IP=${{ secrets.AWS_ROUTE_IP }}"
            "REACT_APP_HOTJAR_ID=${{ secrets.HOTJAR_ID }}"
            "REACT_APP_HOTJAR_SV=${{ secrets.HOTJAR_SV }}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}